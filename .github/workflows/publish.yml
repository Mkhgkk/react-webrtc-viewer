name: Publish to NPM

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., patch, minor, major, or specific version like 1.2.3)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor  
          - major
          - prerelease

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run build
      run: npm run build
      
    - name: Run tests (if available)
      run: npm test --if-present
      
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Bump version (manual dispatch)
      if: github.event_name == 'workflow_dispatch'
      run: |
        npm version ${{ github.event.inputs.version }} --no-git-tag-version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        
    - name: Get version from tag (release)
      if: github.event_name == 'release'
      run: |
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        npm version $TAG_VERSION --no-git-tag-version
        echo "NEW_VERSION=$TAG_VERSION" >> $GITHUB_ENV
        
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create Git tag (manual dispatch)
      if: github.event_name == 'workflow_dispatch'
      run: |
        git add package.json package-lock.json
        git commit -m "chore: bump version to v${{ env.NEW_VERSION }}"
        git tag "v${{ env.NEW_VERSION }}"
        git push origin main --tags
        
    - name: Create GitHub Release (manual dispatch)
      if: github.event_name == 'workflow_dispatch'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v${{ env.NEW_VERSION }}"
        release_name: "Release v${{ env.NEW_VERSION }}"
        body: |
          ## Changes in v${{ env.NEW_VERSION }}
          
          - Automated release via GitHub Actions
          
          ### Installation
          ```bash
          npm install react-webrtc-viewer@${{ env.NEW_VERSION }}
          ```
          
          See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
        draft: false
        prerelease: ${{ contains(env.NEW_VERSION, 'alpha') || contains(env.NEW_VERSION, 'beta') || contains(env.NEW_VERSION, 'rc') }}